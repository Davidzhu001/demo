# /etc/init/puma.conf - Puma config

# This example config should work with Ubuntu 12.04+.  It
# allows you to manage multiple Puma instances with
# Upstart, Ubuntu's native service management tool.
#
# See workers.conf for how to manage all Puma instances at once.
#
# Save this config as /etc/init/puma.conf then manage puma with:
#   sudo start puma app=PATH_TO_APP
#   sudo stop puma app=PATH_TO_APP
#   sudo status puma app=PATH_TO_APP
#
# or use the service command:
#   sudo service puma {start,stop,restart,status}
#

description "Puma Background Worker"

# no "start on", we don't want to automatically start
# This starts upon bootup and stops on shutdown
start on runlevel [2345]
stop on runlevel [06]

# change apps to match your deployment user if you want to use this as a less privileged user (recommended!)
setuid deploy
setgid deploy

respawn
respawn limit 3 30

env PATH=/home/deploy/.rbenv/shims:/home/deploy/.rbenv/bin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
env APP_ROOT=/home/deploy/imtsdemo/current
env SHARED_ROOT=/home/deploy/imtsdemo/shared
env RBENV_ROOT=/home/deploy/.rbenv
env RBENV_VERSION=2.1.2
env RAILS_ENV=production
env RBENV_COMMAND=/home/deploy/.rbenv/bin/rbenv

script

exec /bin/bash <<'EOT'
    cd ${APP_ROOT}
    exec ${RBENV_COMMAND} exec bundle exec puma -C config/puma/production.rb start > /tmp/puma.log 2>&1
EOT
end script
